{"version":3,"sources":["img/logo.jpg","img/icomoon/SVG/alert-triangle.svg","img/icomoon/SVG/plus-circle.svg","logo.svg","components/Logo.js","components/contexts/OrderProvider.js","components/Header.js","components/ClientList.js","components/PopContext.js","components/ProductList.js","components/Calculations.js","components/Results.js","components/Footer.js","components/UserBelt.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","OrderContext","React","createContext","clients","name","id","order","itemId","quantity","products","OrderProvider","_ref","children","_useState","useState","currentClient","mandoca","tequebacon","tequeyoyo","papitayucaqueso","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","Provider","value","Header","_useContext","useContext","setCurrentClient","className","src","logo","alt","type","placeholder","onChange","event","target","onClick","length","user","newClients","Array","from","client","push","sort","b","objectSpread","reverse","addUser","add","warning","ClientList","handleUserClick","map","key","PopContext","uniqueId","ProductList","console","log","setItemQuantity","item","filter","product","ItemSelector","clientQuantity","e","productId","parseInt","currentProductQuantity","newProductQuantity","isNewProduct","forEach","newOrder","concat","toConsumableArray","defineProperty","onChangeQuantity","props","Calculations","ClientList_ClientList","ProductList_ProductList","Results","Fragment","Footer","UserBelt","selected","this","context","Consumer","contextType","App","components_Header","src_components_Calculations","Results_Results","src_components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13749808.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.96667c24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alert-triangle.207fba57.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus-circle.73d3c13e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nclass Logo extends Component {\r\n\trender() {\r\n\t\treturn <div>HEY IM A LOGO</div>;\r\n\t}\r\n}\r\n\r\nexport default Logo;\r\n","import React, { useState } from \"react\";\r\nimport uniqueId from \"lodash/uniqueId\";\r\n\r\nexport const OrderContext = React.createContext({});\r\n\r\nconst clients = [\r\n\t{\r\n\t\tname: \"Javier\",\r\n\t\tid: 0,\r\n\t\torder: [\r\n\t\t\t{\r\n\t\t\t\titemId: \"tequeno\",\r\n\t\t\t\tquantity: 3\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\titemId: \"pastelitopapaqueso\",\r\n\t\t\t\tquantity: 5\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: \"Luis\",\r\n\t\tid: 1,\r\n\t\torder: [\r\n\t\t\t{\r\n\t\t\t\titemId: \"tequeno\",\r\n\t\t\t\tquantity: 4\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\titemId: \"pastelitopapaqueso\",\r\n\t\t\t\tquantity: 5\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nconst products = [\r\n\t{\r\n\t\tid: \"tequeno\",\r\n\t\tname: \"teque√±o\"\r\n\t},\r\n\t{\r\n\t\tid: \"pastelpapayqueso\",\r\n\t\tname: \"pastelito papa y queso\"\r\n\t},\r\n\t{\r\n\t\tid: \"pastelpizza\",\r\n\t\tname: \"pastelito pizza\"\r\n\t},\r\n\t{\r\n\t\tid: \"mandoca\",\r\n\t\tname: \"mandoca\"\r\n\t},\r\n\t{\r\n\t\tid: \"tequeyoyo\",\r\n\t\tname: \"tequeyoyo\"\r\n\t},\r\n\t{\r\n\t\tid: \"tequebacon\",\r\n\t\tname: \"tequebacon\"\r\n\t},\r\n\t{\r\n\t\tid: \"papitayucaqueso\",\r\n\t\tname: \"papitas\"\r\n\t}\r\n];\r\n\r\n// const setItemQuantity = id => {\r\n// \t// loop on the current user order\r\n// \t// const packedItems = items.filter(item => item.packed);\r\n\r\n// \t// checks if there's an item associated\r\n// \tconst item = this.state.client.order.filter(item => item.itemId === id);\r\n\r\n// \t// this.setItemQuantity(id);\r\n\r\n// \tif (item.length > 0) {\r\n// \t\treturn item[0].quantity;\r\n// \t}\r\n// \treturn 0;\r\n\r\n// \t// match the id with the product id\r\n// \t// return the quantity\r\n// \t// if no id match, return 0\r\n// };\r\n\r\nexport default function OrderProvider({ children }) {\r\n\tconst [state, setState] = useState({\r\n\t\tclients,\r\n\t\tcurrentClient: null,\r\n\t\tproducts,\r\n\t\tmandoca: 0,\r\n\t\ttequebacon: 0,\r\n\t\ttequeyoyo: 0,\r\n\t\tpapitayucaqueso: 0\r\n\t});\r\n\r\n\treturn (\r\n\t\t<OrderContext.Provider value={{ state, setState }}>\r\n\t\t\t{children}\r\n\t\t</OrderContext.Provider>\r\n\t);\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport logo from \"../img/logo.jpg\";\r\nimport warning from \"../img/icomoon/SVG/alert-triangle.svg\";\r\nimport add from \"../img/icomoon/SVG/plus-circle.svg\";\r\nimport uniqueId from \"lodash/uniqueId\";\r\n\r\n// import uniqueId from \"lodash/uniqueId\";\r\n\r\nimport { OrderContext } from \"./contexts/OrderProvider\";\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n\tconst { state, setState } = useContext(OrderContext);\r\n\tconst [currentClient, setCurrentClient] = useState(\"\");\r\n\t// console.log(\"state is \", state);\r\n\r\n\t// state = {\r\n\t// \tname: \"\",\r\n\t// \tenableAdding: false\r\n\t// };\r\n\r\n\t// addUser = e => {\r\n\t// \t//console.log(this.state.name);\r\n\t// \t// this.props.context.addUser(this.state.name);\r\n\t// \t// console.log(this.context.addUser(this.state.name));\r\n\t// };\r\n\r\n\tconst addUser = user => {\r\n\t\tconst newClients = Array.from(state.clients);\r\n\t\tconst client = {\r\n\t\t\tname: user,\r\n\t\t\tid: state.clients.length + 1,\r\n\t\t\torder: []\r\n\t\t};\r\n\t\tnewClients.push(client);\r\n\t\tnewClients.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tclients: newClients.reverse(),\r\n\t\t\tcurrentClient: client\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleValueChange = event => {\r\n\t\t// const value = event.target.value.replace(/^0+/, \"\");\r\n\t\t// const newvalue = Math.abs(value);\r\n\t\tsetCurrentClient(event.target.value);\r\n\t};\r\n\r\n\tconst handleClick = event => {\r\n\t\tif (currentClient.length > 1) {\r\n\t\t\tconst clientName = currentClient;\r\n\t\t\taddUser(clientName);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"header\">\r\n\t\t\t<div className=\"logo\">\r\n\t\t\t\t<div className=\"logo-written\">\r\n\t\t\t\t\t<p>TEQUEPOPS-CALC!</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"logo-image\">\r\n\t\t\t\t\t<img className=\"logo-jpg\" src={logo} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"username-input\">\r\n\t\t\t\t<div className=\"username\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={currentClient}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"QUIEN COME?\"\r\n\t\t\t\t\t\tonChange={handleValueChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"buttons\">\r\n\t\t\t\t\t<div onClick={handleClick} className=\"btn-add-user\">\r\n\t\t\t\t\t\t<img className=\"icon\" src={add} alt=\"\" />\r\n\t\t\t\t\t\t<span className=\"icon-label\">AGREGA</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"btn-reset-app\">\r\n\t\t\t\t\t\t<img className=\"icon\" src={warning} alt=\"\" />\r\n\t\t\t\t\t\t<span className=\"icon-label\">RESET</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport \"./ClientList.css\";\r\n\r\n// import { PopContext } from \"./PopContext\";\r\nimport { OrderContext } from \"./contexts/OrderProvider\";\r\n\r\nexport default function ClientList() {\r\n\tconst { state, setState } = useContext(OrderContext);\r\n\r\n\t// state = {\r\n\t// \tselected: 0\r\n\t// };\r\n\r\n\t// componentDidMount() {\r\n\t// \tlet value = this.context.state.clients;\r\n\t// \t// console.log(\"value :\", value);\r\n\t// \t/* perform a side-effect at mount using the value of UserContext */\r\n\t// }\r\n\r\n\tconst handleUserClick = client => event => {\r\n\t\tsetState({ ...state, currentClient: client });\r\n\t};\r\n\r\n\tconst { clients } = state;\r\n\r\n\treturn (\r\n\t\t<div className=\"client-list\">\r\n\t\t\t{clients.map(client => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={client.id}\r\n\t\t\t\t\t\tclassName=\"client-name\"\r\n\t\t\t\t\t\tonClick={handleUserClick(client)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{client.name}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// ClientList.contextType = PopContext;\r\n\r\n// export default ClientList;\r\n","import React, { Component } from \"react\";\r\nimport uniqueId from \"lodash/uniqueId\";\r\n\r\n// first, we create a context!\r\nexport const PopContext = React.createContext();\r\n\r\n// const state = {\r\n// \ttotals: {\r\n// \t\ttequeyoyos: 0,\r\n// \t\tpapaConQueso: 0,\r\n// \t\ttequebacon: 0,\r\n// \t\tmandoca: 0,\r\n// \t\tpapita: 0,\r\n// \t\tpizza: 0\r\n// \t},\r\n// \tclients: [\r\n//     {\r\n//       name: 'Javier',\r\n//       order: [\r\n//         { tequenos: 0, }\r\n//       ]\r\n\r\n//     }\r\n//   ]\r\n// };\r\n\r\nconst clients = [\r\n\t{\r\n\t\tname: \"Javier\",\r\n\t\tid: uniqueId(),\r\n\t\torder: [\r\n\t\t\t{\r\n\t\t\t\titemName: \"tequeno\",\r\n\t\t\t\titemId: 0,\r\n\t\t\t\tquantity: 3\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\titemName: \"pastelpapa\", // no se si el nombre aqui vaya\r\n\t\t\t\titemId: 1,\r\n\t\t\t\tquantity: 5\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tname: \"Jesus\",\r\n\t\tid: uniqueId(),\r\n\t\torder: [\r\n\t\t\t{\r\n\t\t\t\titemName: \"tequeno\",\r\n\t\t\t\titemId: 0,\r\n\t\t\t\tquantity: 4\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\titemName: \"pastelpapa\", // no se si el nombre aqui vaya\r\n\t\t\t\titemId: 2,\r\n\t\t\t\tquantity: 5\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nconst products = [\r\n\t{\r\n\t\tid: uniqueId(),\r\n\t\tname: \"teque√±o\"\r\n\t},\r\n\t{\r\n\t\tid: uniqueId(),\r\n\t\tname: \"pastelito\"\r\n\t},\r\n\t{\r\n\t\tid: uniqueId(),\r\n\t\tname: \"mandoca\"\r\n\t}\r\n];\r\n\r\nexport class PopProvider extends Component {\r\n\tstate = {\r\n\t\tproducts: products,\r\n\t\tclient: null,\r\n\t\tclients: []\r\n\t};\r\n\r\n\taddUser = user => {\r\n\t\tconst newClients = Array.from(this.state.clients);\r\n\t\tconst client = {\r\n\t\t\tname: user,\r\n\t\t\tid: uniqueId(),\r\n\t\t\torder: []\r\n\t\t};\r\n\t\tnewClients.push(client);\r\n\t\tnewClients.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n\r\n\t\tthis.setState({ clients: newClients.reverse(), client }, () => {\r\n\t\t\t// console.log(this.state.clients);\r\n\t\t});\r\n\t};\r\n\r\n\taddItem = item => {\r\n\t\tconst newItem = {};\r\n\t};\r\n\r\n\tsetClient = client => {\r\n\t\tconst nclient = this.state.clients.filter(\r\n\t\t\tlclient => lclient.id === client.id\r\n\t\t);\r\n\t\tconst [stateclient] = nclient;\r\n\t\tconsole.log(\"stateclient :\", stateclient);\r\n\t\t// console.log(mclient);\r\n\t\tthis.setState({\r\n\t\t\tclient: stateclient\r\n\t\t});\r\n\t};\r\n\r\n\tsetItemQuantity = id => {\r\n\t\t// loop on the current user order\r\n\t\t// const packedItems = items.filter(item => item.packed);\r\n\r\n\t\t// checks if there's an item associated\r\n\t\tconst item = this.state.client.order.filter(item => item.itemId === id);\r\n\r\n\t\t// this.setItemQuantity(id);\r\n\r\n\t\tif (item.length > 0) {\r\n\t\t\treturn item[0].quantity;\r\n\t\t}\r\n\t\treturn 0;\r\n\r\n\t\t// match the id with the product id\r\n\t\t// return the quantity\r\n\t\t// if no id match, return 0\r\n\t};\r\n\r\n\tonChangeItem = (event, itemId) => {\r\n\t\t// {\r\n\t\t// \tname: \"Javier\",\r\n\t\t// \tid: uniqueId(),\r\n\t\t// \torder: [\r\n\t\t// \t\t{\r\n\t\t// \t\t\titemName: \"tequeno\",\r\n\t\t// \t\t\titemId: 0,\r\n\t\t// \t\t\tquantity: 3\r\n\t\t// \t\t},\r\n\t\t// \t\t{\r\n\t\t// \t\t\titemName: \"pastelpapa\", // no se si el nombre aqui vaya\r\n\t\t// \t\t\titemId: 1,\r\n\t\t// \t\t\tquantity: 5\r\n\t\t// \t\t}\r\n\t\t// \t]\r\n\t\t// },\r\n\t\tconst quantity = parseInt(event.target.value);\r\n\t\tconst newClients = this.state.clients.map(client => {\r\n\t\t\tif (client.id === this.state.client.id) {\r\n\t\t\t\tconsole.log(\"cambiando\", client.name);\r\n\t\t\t\t// debugger;\r\n\t\t\t\tif (client.order.length > 0) {\r\n\t\t\t\t\tconsole.log(\"no items :\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"pushieando :\", quantity);\r\n\t\t\t\t\tclient.order.push({\r\n\t\t\t\t\t\titemId,\r\n\t\t\t\t\t\tquantity\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn client;\r\n\t\t});\r\n\t\tconsole.log(newClients);\r\n\r\n\t\tthis.setState({ clients: newClients });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<PopContext.Provider\r\n\t\t\t\tvalue={{\r\n\t\t\t\t\tstate: this.state,\r\n\t\t\t\t\t// increaseOrder: () => this.setState({ amount: this.state.amount + 1 }),\r\n\t\t\t\t\t//increaseItem: (type) => this.setState({ type: this.state.type + 1 }), // interesting...\r\n\t\t\t\t\taddUser: this.addUser,\r\n\t\t\t\t\t// setUser: this.setUser,\r\n\t\t\t\t\tsetClient: this.setClient,\r\n\t\t\t\t\tsetItemQuantity: this.setItemQuantity,\r\n\t\t\t\t\tonChangeItem: this.onChangeItem\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</PopContext.Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n//export default PopProvider;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { PopContext } from \"./PopContext\";\r\n// import isEmpty from \"lodash/isEmpty\";\r\nimport \"./ProductList.css\";\r\n\r\nimport { OrderContext } from \"./contexts/OrderProvider\";\r\n\r\nexport default function ProductList() {\r\n\tconst { state, setState } = useContext(OrderContext);\r\n\tconst { clients, currentClient, products } = state;\r\n\r\n\t// constructor(props) {\r\n\t// \tsuper(props);\r\n\r\n\t// \tthis.state = {\r\n\t// \t\t// client: this.context.state.client\r\n\t// \t};\r\n\r\n\t// \tthis.handleQuantityChange = this.handleQuantityChange.bind(this);\r\n\t// }\r\n\tconsole.log(\"state is \", state);\r\n\r\n\t// handleQuantityChange(event) {\r\n\t// \tconsole.log(\"the on change is working\");\r\n\t// \tconst tequenos = parseInt(event.target.value);\r\n\t// \tthis.setState({ tequenos });\r\n\t// }\r\n\r\n\t// productQuantitator = (quantity, product) => {\r\n\t// \tfor (let index = 0; index <= quantity; index++) {}\r\n\t// };\r\n\r\n\t// componentDidMount() {\r\n\t// \t// this.setOrder();\r\n\t// \t// console.log(this.context.state.clients);\r\n\t// \t/* perform a side-effect at mount using the value of UserContext */\r\n\t// }\r\n\r\n\tconst setItemQuantity = id => {\r\n\t\t// loop on the current user order\r\n\t\t// const packedItems = items.filter(item => item.packed);\r\n\r\n\t\t// checks if there's an item associated\r\n\r\n\t\tconst item = currentClient.order.filter(item => item.itemId === id);\r\n\r\n\t\t// this.setItemQuantity(id);\r\n\t\tif (item.length > 0) {\r\n\t\t\treturn item[0].quantity;\r\n\t\t}\r\n\t\treturn 0;\r\n\r\n\t\t// match the id with the product id\r\n\t\t// return the quantity\r\n\t\t// if no id match, return 0\r\n\t};\r\n\r\n\tconst onChangeQuantity = (e, productId) => {\r\n\t\t// debugger;\r\n\t\tconst quantity = parseInt(e.target.value);\r\n\t\tconst currentProductQuantity = state[productId];\r\n\t\tlet newProductQuantity = null;\r\n\t\t// debugger;\r\n\r\n\t\t// first, i need to find the client\r\n\t\tconst newClients = clients.map(client => {\r\n\t\t\t// current client is client to be changed?\r\n\t\t\tif (currentClient.id === client.id) {\r\n\t\t\t\t// check if its a new product\r\n\t\t\t\tlet isNewProduct = true;\r\n\t\t\t\tclient.order.forEach(item => {\r\n\t\t\t\t\tif (item.itemId === productId) isNewProduct = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet newOrder = [];\r\n\r\n\t\t\t\tif (isNewProduct) {\r\n\t\t\t\t\tnewOrder = [\r\n\t\t\t\t\t\t...client.order,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\titemId: productId,\r\n\t\t\t\t\t\t\tquantity\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\t\t\t\t\tnewProductQuantity = quantity;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewOrder = client.order.map(item => {\r\n\t\t\t\t\t\t// if so, updated\r\n\t\t\t\t\t\tif (item.itemId === productId) {\r\n\t\t\t\t\t\t\tif (currentProductQuantity > quantity) {\r\n\t\t\t\t\t\t\t\tnewProductQuantity = currentProductQuantity - quantity;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewProductQuantity = currentProductQuantity + quantity;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn { ...item, quantity };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tclient.order = newOrder;\r\n\t\t\t}\r\n\t\t\treturn client;\r\n\t\t});\r\n\t\tsetState({\r\n\t\t\t...state,\r\n\t\t\tclients: newClients,\r\n\t\t\t[productId]: newProductQuantity\r\n\t\t});\r\n\t};\r\n\r\n\tconst buildOrderMenuFromProducts = productList => {\r\n\t\tconst list = productList.map(product => {\r\n\t\t\treturn (\r\n\t\t\t\t<ItemSelector\r\n\t\t\t\t\tkey={product.id}\r\n\t\t\t\t\tname={product.name}\r\n\t\t\t\t\tid={product.id}\r\n\t\t\t\t\tclientQuantity={setItemQuantity(product.id)}\r\n\t\t\t\t\t// onChange={e => this.context.onChangeItem(e, product.id)}\r\n\t\t\t\t\tonChange={e => onChangeQuantity(e, product.id)}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn list;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"product-list\">\r\n\t\t\t{currentClient && buildOrderMenuFromProducts(products)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ItemSelector(props) {\r\n\tconst { name, id, clientQuantity, onChange } = props;\r\n\treturn (\r\n\t\t<div key={id} className=\"product\">\r\n\t\t\t<span className=\"product-name\">{name}</span>\r\n\t\t\t<select\r\n\t\t\t\tvalue={clientQuantity}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tclassName=\"product-select\"\r\n\t\t\t>\r\n\t\t\t\t<option value=\"0\">0</option>\r\n\t\t\t\t<option value=\"1\">1</option>\r\n\t\t\t\t<option value=\"2\">2</option>\r\n\t\t\t\t<option value=\"3\">3</option>\r\n\t\t\t\t<option value=\"4\">4</option>\r\n\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// ProductList.contextType = PopContext;\r\n","import React, { Component } from \"react\";\r\nimport ClientList from \"../components/ClientList\";\r\nimport ProductList from \"../components/ProductList\";\r\n\r\nimport \"./Calculations.css\";\r\n\r\nclass Calculations extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"calculations\">\r\n\t\t\t\t<ClientList />\r\n\t\t\t\t<ProductList />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Calculations;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport \"./Results.css\";\r\n\r\nimport { OrderContext } from \"./contexts/OrderProvider\";\r\n\r\nexport default function Results() {\r\n\tconst { state, setState } = useContext(OrderContext);\r\n\tconst { mandoca, tequebacon, tequeyoyo, papitayucaqueso } = state;\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"results\">\r\n\t\t\t\t<div className=\"summary\">\r\n\t\t\t\t\t<div className=\"summary-detail\">\r\n\t\t\t\t\t\t<div className=\"dozen-wrapper\">\r\n\t\t\t\t\t\t\t<div className=\"summary-detail-desc\">DOCENAS</div>\r\n\t\t\t\t\t\t\t<span>4 mas para 3 docenas</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"summary-detail-quantity\">0</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"summary-detail\">\r\n\t\t\t\t\t\t<div className=\"summary-detail-desc\">TEQUEBACON</div>\r\n\t\t\t\t\t\t<div className=\"summary-detail-quantity\">{tequebacon}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"summary-detail\">\r\n\t\t\t\t\t\t<div className=\"summary-detail-desc\">TEQUEYOYO</div>\r\n\t\t\t\t\t\t<div className=\"summary-detail-quantity\">{tequeyoyo}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"summary-detail\">\r\n\t\t\t\t\t\t<div className=\"summary-detail-desc\">PAPITAS</div>\r\n\t\t\t\t\t\t<div className=\"summary-detail-quantity\">{papitayucaqueso}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"summary-detail\">\r\n\t\t\t\t\t\t<div className=\"summary-detail-desc\">MANDOCAS</div>\r\n\t\t\t\t\t\t<div className=\"summary-detail-quantity\">{mandoca}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"summary-detail\">\r\n\t\t\t\t\t\t<div className=\"summary-detail-desc\">OTHER</div>\r\n\t\t\t\t\t\t<div className=\"summary-detail-quantity\">0</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"btn-container\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName=\"btn-whatsapp\"\r\n\t\t\t\t\t\t// href=\"https://wa.me/5491132379456?text=Hola%20tequepops%20queria%20pedirte%20lo%20siguiente:\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tWHATSAPP\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <PopContext.Consumer>\r\n\t\t\t\t\t\t{context => (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t<div className=\"btn-container\">\r\n\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-whatsapp\"\r\n\t\t\t\t\t\t\t\t\t\thref=\"https://wa.me/5491132379456?text=Hola%20tequepops%20queria%20pedirte%20lo%20siguiente:\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tWHATSAPP\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\ti want {context.state.amount} {context.state.order} please!\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</PopContext.Consumer> */}\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nclass Footer extends Component {\r\n\trender() {\r\n\t\treturn <div className=\"footer\">FOOTER!</div>;\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./UserBelt.css\";\r\n\r\nimport { PopContext } from \"./PopContext\";\r\n\r\nclass UserBelt extends Component {\r\n\tstate = {\r\n\t\tselected: 0\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tlet value = this.context.state.clients;\r\n\t\t// console.log(\"value :\", value);\r\n\t\t/* perform a side-effect at mount using the value of UserContext */\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<PopContext.Consumer>\r\n\t\t\t\t\t{context => (\r\n\t\t\t\t\t\t<div className=\"client-list\">\r\n\t\t\t\t\t\t\t{context.state.clients.map(client => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div key={client.id} className=\"client-name\">\r\n\t\t\t\t\t\t\t\t\t\t{client.name}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</PopContext.Consumer>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nUserBelt.contextType = PopContext;\r\n\r\nexport default UserBelt;\r\n","import React, { Component, useContext } from \"react\";\nimport Logo from \"./components/Logo\";\nimport logo from \"./logo.svg\";\n\nimport Header from \"./components/Header\";\nimport Calculations from \"./components/Calculations\";\nimport Results from \"./components/Results\";\nimport Footer from \"./components/Footer\";\nimport UserBelt from \"./components/UserBelt\";\n\nimport { PopProvider } from \"./components/PopContext\";\nimport { PopContext } from \"./components/PopContext\";\n\nimport OrderProvider from \"./components/contexts/OrderProvider\";\n\nimport { OrderContext } from \"./components/contexts/OrderProvider\";\n\nimport \"./App.css\";\n\n// create a provider component!\n\nfunction App() {\n\tconst { state, setState } = useContext(OrderContext);\n\n\treturn (\n\t\t<OrderProvider>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"middle\">\n\t\t\t\t\t<Calculations />\n\t\t\t\t\t<Results />\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</OrderProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}